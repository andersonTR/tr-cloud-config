spring:
  application:
    name: auth-server
  profiles:
    active:  docker

server:
  port: 9080
  contextPath: /tr

logging:
  level:
    org.springframework.security: DEBUG
    
com:
  traderocker:
    authserver:
      config:
        driverClassName: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost
        port: 3306
        databaseName: oauth_db
        userName: root
        password: password
        customers: traderocket,pemex,hitachi
        clients: "{traderocket:/login,pemex:/login_pemex,hitachi:/login}"
        defaultLoginUrl: "/login"

eureka:
  client:
    serviceUrl:
      defaultZone: http://user:password@localhost:8761/eureka/
        
include:
  test:
    users: false
  db:
    users: true
  ldap:
    users: true
        
ldap:
  ldapUrl: ldap://127.0.0.1:10389/dc=example,dc=com
  bindPW: 
  groupSearchBase: dc=groups
  groupSearchFilter: (uniqueMember={0})
  userDnPattern: uid={0},dc=people
  groupRoleAttribute: cn
  #this seems does not work the way of the design.  It only adds whatever you put into this field.  If you put A in this filed
  #it will make the role to be ROLE_Axxxx.
  rolePrefix: ROLE_
  enable2FA: true
  secretAttributeName: displayName
  tfaAttributeName: carLicense
  passwordAttributeName: userPassword

---

spring:
  profiles: docker

com:
  traderocker:
    authserver:
      config:
        password: password
        
---

spring:
  profiles: local
  
com:
  traderocker:
    authserver:
      config:
        password: password
